# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity")+
coord_flip()+
xlab("Scaled Variable Importance")+
ylab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity")+
coord_flip()+
scale_fill_brewer(palette = "PiYG")
xlab("Scaled Variable Importance")+
ylab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity")+
coord_flip()+
scale_fill_brewer(palette = "Purples")+
xlab("Scaled Variable Importance")+
ylab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity")+
coord_flip()+
scale_fill_brewer(palette = "Purples")+
ylab("Scaled Variable Importance")+
xlab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity", color = "black", alpha = 0.8)+
coord_flip()+
scale_fill_brewer(palette = "Purples")+
ylab("Scaled Variable Importance")+
xlab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.8)+
coord_flip()+
scale_fill_brewer(palette = "Purples")+
ylab("Scaled Variable Importance")+
xlab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.8)+
coord_flip()+
scale_fill_brewer(palette = "Blues")+
ylab("Scaled Variable Importance")+
xlab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.8)+
coord_flip()+
scale_fill_brewer(palette = "Blues")+
ylab("Scaled Importance")+
xlab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
#| warning: false
#|
# make some sample variable importance data
dt = data.frame(Variable = c("Temperature", "Precipitation", "Slope", "Aspect", "Elevation"), Importance = c(0.8, 0.2, 0.6, 0.3, 0.4))
dt
ggplot(aes(x = reorder(Variable, Importance), y = Importance, fill = Variable), data = dt)+
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.8)+
coord_flip()+
scale_fill_brewer(palette = "Blues")+
ylab("Scaled Importance")+
xlab("Random Forests Variable")+
theme_bw()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "none")
plot = ggplot()
#| eval: false
plot = ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species), data = iris)+
geom_point()
## Export a high resolution .png
## You will want to experiment with the height/width to get the best dimensions
png("filepath_here.png", height = 4, width = 8, units = "in", res = 300)
plot
dev.off()
## Using ggsave()
#| eval: false
#| warning: false
# define plot
your_plot = ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species), data = iris)+
geom_point()
## Export a high resolution .png of the plot
## You will want to experiment with the height/width to get the best dimensions
png("filepath_here.png", height = 4, width = 8, units = "in", res = 300)
your_plot
dev.off()
## Using ggsave()
ggsave(filename = "filepath_here.png", your_plot,  height = 4, width = 8, units = "in", dpi = 300)
library(ggplot2)
head(mpg)
library(ggplot2)
head(midwest)
library(ggplot2)
head(midwest)
ggplot(aes(x = percollage, y = percbelowpverty), data = midwest)+
geom_point()
library(ggplot2)
head(midwest)
ggplot(aes(x = percollege, y = percbelowpverty), data = midwest)+
geom_point()
library(ggplot2)
head(midwest)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(size = poptotal)
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal/1000000))+
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal/1000000))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal), alpha = 0.5)+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty, color = state), data = midwest)+
geom_point(aes(size = poptotal), alpha = 0.5)+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty, color = state), data = midwest)+
geom_point(aes(size = poptotal), alpha = 0.5)+
xlab("Percent college educated")+
ylab("Percent below poverty line")
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty, color = state), data = midwest)+
geom_point(aes(size = poptotal), alpha = 0.5)+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth()+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.3)+
geom_smooth(se = FALSE)+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE)+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
legend.position = "bottom")
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Spectral")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Spectral", name = "State")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "PiYG", name = "State")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.5)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Accent", name = "State")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Accent", name = "State")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(title = "Population size")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(title = "Population size", color = "darkgrey")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(title = "Population size", fill = "darkgrey")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(title = "Population size", fill = "darkgrey")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(title = "Population size", fill = "grey")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(override.aes(list(color = "grey")), title = "Population size")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(override.aes = list(color = "grey"), title = "Population size")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(override.aes = list(color = "darkgrey"), title = "Population size")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
library(ggplot2)
#| echo: FALSE
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(override.aes = list(color = "darkgrey"), title = "Population size")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
#| echo: FALSE
#| warning: false
#|
library(ggplot2)
ggplot(aes(x = percollege, y = percbelowpoverty), data = midwest)+
geom_point(aes(size = poptotal, color = state), alpha = 0.7)+
geom_smooth(se = FALSE, color = "black")+
scale_color_brewer(palette = "Dark2", name = "State")+
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3)),
size = guide_legend(override.aes = list(color = "darkgrey"), title = "Population size")) +
xlab("Percent college educated")+
ylab("Percent below poverty line")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem))
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem))
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T))
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>%
ggplot(aes(x = vore, y = mean))+
geom_bar(stat = "identity")
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>%
ggplot(aes(x = reoder(vore, mean), y = mean))+
geom_bar(stat = "identity")
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>%
ggplot(aes(x = reorder(vore, mean), y = mean))+
geom_bar(stat = "identity")
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>% filter(vore != "NA") %>%
ggplot(aes(x = reorder(vore, mean), y = mean))+
geom_bar(stat = "identity")
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>% filter(vore != "NA") %>%
ggplot(aes(x = reorder(vore, mean), y = mean))+
geom_bar(stat = "identity")+
ylab("Mean sleep REM (hours)")+
xlab("Mammal type")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>% filter(vore != "NA") %>%
ggplot(aes(x = reorder(vore, mean), y = mean))+
geom_bar(stat = "identity", width = 0.7)+
ylab("Mean sleep REM (hours)")+
xlab("Mammal type")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
#| echo: false
#| warning: false
library(dplyr)
msleep %>% group_by(vore) %>% summarise(mean = mean(sleep_rem, na.rm = T)) %>% filter(vore != "NA") %>%
ggplot(aes(x = reorder(vore, mean), y = mean, fill = vore))+
geom_bar(stat = "identity", width = 0.7)+
ylab("Mean sleep REM (hours)")+
xlab("Mammal type")+
theme_classic()+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16))
